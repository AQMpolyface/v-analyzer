================================================================================
Simple string interpolation
================================================================================
'Hello, ${name}!'
--------------------------------------------------------------------------------

(source_file
  (simple_statement
    (literal
      (interpreted_string_literal
        (string_interpolation
          (reference_expression
            (identifier)))))))

================================================================================
String interpolation with complex expression
================================================================================
'Hello, ${name.foo()}!'
--------------------------------------------------------------------------------

(source_file
  (simple_statement
    (literal
      (interpreted_string_literal
        (string_interpolation
          (call_expression
            (selector_expression
              (reference_expression
                (identifier))
              (reference_expression
                (identifier)))
            (argument_list)))))))

================================================================================
String interpolation with complex expressions and format specifiers
================================================================================
x := 123.4567
println('[${x:.2}]')
println('[${x:10}]')
println('[${int(x):-10}]')
println('[${int(x):010}]')
println('[${int(x):b}]')
println('[${int(x):o}]')
println('[${int(x):X}]')
println('[${10.0000:.2}]')
println('[${10.0000:+.2f}]')
--------------------------------------------------------------------------------

(source_file
  (simple_statement
    (var_declaration
      (expression_list
        (reference_expression
          (identifier)))
      (expression_list
        (literal
          (float_literal)))))
  (simple_statement
    (call_expression
      (reference_expression
        (identifier))
      (argument_list
        (argument
          (literal
            (interpreted_string_literal
              (string_interpolation
                (reference_expression
                  (identifier))
                (format_specifier
                  (int_literal)))))))))
  (simple_statement
    (call_expression
      (reference_expression
        (identifier))
      (argument_list
        (argument
          (literal
            (interpreted_string_literal
              (string_interpolation
                (reference_expression
                  (identifier))
                (format_specifier
                  (int_literal)))))))))
  (simple_statement
    (call_expression
      (reference_expression
        (identifier))
      (argument_list
        (argument
          (literal
            (interpreted_string_literal
              (string_interpolation
                (call_expression
                  (reference_expression
                    (identifier))
                  (argument_list
                    (argument
                      (reference_expression
                        (identifier)))))
                (format_specifier
                  (int_literal)))))))))
  (simple_statement
    (call_expression
      (reference_expression
        (identifier))
      (argument_list
        (argument
          (literal
            (interpreted_string_literal
              (string_interpolation
                (call_expression
                  (reference_expression
                    (identifier))
                  (argument_list
                    (argument
                      (reference_expression
                        (identifier)))))
                (format_specifier
                  (int_literal)))))))))
  (simple_statement
    (call_expression
      (reference_expression
        (identifier))
      (argument_list
        (argument
          (literal
            (interpreted_string_literal
              (string_interpolation
                (call_expression
                  (reference_expression
                    (identifier))
                  (argument_list
                    (argument
                      (reference_expression
                        (identifier)))))
                (format_specifier))))))))
  (simple_statement
    (call_expression
      (reference_expression
        (identifier))
      (argument_list
        (argument
          (literal
            (interpreted_string_literal
              (string_interpolation
                (call_expression
                  (reference_expression
                    (identifier))
                  (argument_list
                    (argument
                      (reference_expression
                        (identifier)))))
                (format_specifier))))))))
  (simple_statement
    (call_expression
      (reference_expression
        (identifier))
      (argument_list
        (argument
          (literal
            (interpreted_string_literal
              (string_interpolation
                (call_expression
                  (reference_expression
                    (identifier))
                  (argument_list
                    (argument
                      (reference_expression
                        (identifier)))))
                (format_specifier))))))))
  (simple_statement
    (call_expression
      (reference_expression
        (identifier))
      (argument_list
        (argument
          (literal
            (interpreted_string_literal
              (string_interpolation
                (literal
                  (float_literal))
                (format_specifier
                  (int_literal)))))))))
  (simple_statement
    (call_expression
      (reference_expression
        (identifier))
      (argument_list
        (argument
          (literal
            (interpreted_string_literal
              (string_interpolation
                (literal
                  (float_literal))
                (format_specifier
                  (int_literal))))))))))

================================================================================
C string literal
================================================================================
c'Hello, World!'
--------------------------------------------------------------------------------

(source_file
  (simple_statement
    (literal
      (c_string_literal))))

================================================================================
Raw string literal
================================================================================
r'Hello, World!'
--------------------------------------------------------------------------------

(source_file
  (simple_statement
    (literal
      (raw_string_literal))))
